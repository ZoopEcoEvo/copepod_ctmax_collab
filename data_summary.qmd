---
title: "Data Summary"
---

# Ecophysiological and biogeographic predictors of CTmax in Polish copepods

```{r setup, echo = F}

knitr::opts_chunk$set(
  echo = F,
  fig.align = "center",
  message = FALSE,
  warning = FALSE,
  collapse = T
)

```

This page summarizes the data collected, including the distribution of sampling sites, the species collected, and some basic summaries of the data collected.

```{r message=F, warning=F, echo = F}
library(tidyverse)
library(rnaturalearth)

ctmax_data = read.csv(file = "Raw_data/ctmax_data.csv") %>% 
  drop_na(ctmax)


theme_matt = function(base_size = 18,
                      dark_text = "grey20"){
  mid_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[2]
  light_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[3]
  
  ggpubr::theme_pubr(base_family="sans") %+replace% 
    theme(
      panel.background  = element_rect(fill="transparent", colour=NA), 
      plot.background = element_rect(fill="transparent", colour=NA), 
      legend.background = element_rect(fill="transparent", colour=NA),
      legend.key = element_rect(fill="transparent", colour=NA),
      text = element_text(colour = mid_text, lineheight = 1.1),
      title = element_text(size = base_size * 1.5,
                           colour = dark_text),
      axis.text = element_text(size = base_size,
                               colour = mid_text),
      axis.title.x = element_text(size = base_size * 1.2,
                                  margin = unit(c(3, 0, 0, 0), "mm")),
      axis.title.y = element_text(size = base_size * 1.2,
                                  margin = unit(c(0, 5, 0, 0), "mm"), 
                                  angle = 90),
      legend.text = element_text(size=base_size * 0.9),
      legend.title = element_text(size = base_size * 0.9, 
                                  face = "bold"),
      plot.margin = margin(0.25, 0.25, 0.25, 0.25,"cm")
    )
}

theme_matt_facets = function(base_size = 18,
                             dark_text = "grey20"){
  mid_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[2]
  light_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[3]
  
  theme_bw(base_family="sans") %+replace% 
    theme(
      panel.grid = element_blank(),
      panel.background  = element_rect(fill="transparent", colour=NA), 
      plot.background = element_rect(fill="transparent", colour=NA), 
      legend.background = element_rect(fill="transparent", colour=NA),
      legend.key = element_rect(fill="transparent", colour=NA),
      text = element_text(colour = mid_text, lineheight = 1.1),
      strip.text.x = element_text(size = base_size),
      title = element_text(size = base_size * 1.5,
                           colour = dark_text),
      axis.text = element_text(size = base_size,
                               colour = mid_text),
      axis.title.x = element_text(size = base_size * 1.2,
                                  margin = unit(c(3, 0, 0, 0), "mm")),
      axis.title.y = element_text(size = base_size * 1.2,
                                  margin = unit(c(0, 5, 0, 0), "mm"), 
                                  angle = 90),
      legend.text = element_text(size=base_size * 0.9),
      legend.title = element_text(size = base_size * 0.9, 
                                  face = "bold"),
      plot.margin = margin(0.25, 0.25, 0.25, 0.25,"cm")
    )
}

```

## Collection Details

```{r message=F, warning=F, echo = F}

sites = data.frame(
  "site" = c("Sicieno", "Drawsko", "Insko", "Glebokie", "Odra", "Obok Lomota", "Przeclaw"), 
  "lat" = c(53.612418, 53.596071, 53.446976, 53.4726721, 53.4287614, 53.4824602, 53.3720269), 
  "long" = c(16.024032, 16.178750, 15.557093, 14.4835817, 14.5743674, 14.5084380, 14.4465705)
)

world <- ne_countries(scale = "medium", returnclass = "sf")
Europe <- world[which(world$continent == "Europe"),]
ggplot(Europe) +
  geom_sf() + 
  geom_point(data = sites, aes(x = long, y = lat)) + 
  coord_sf(xlim = c(12,20), ylim = c(52,55), expand = FALSE) + 
  theme_bw() + 
  theme(panel.grid = element_blank())

```

Copepod collections were made from `r length(unique(sites$site))` sites from `r paste0(range(ctmax_data$collection_date), collapse = " to ")`. A total of `r length(ctmax_data$ctmax)` CTmax measurements were made, ranging from `r paste0(range(ctmax_data$ctmax), collapse = " to ")`°C.

The distribution of CTmax measurements from each site and habitat type is shown below.

```{r}
ctmax_data %>% 
  group_by(site, collection_date, habitat) %>% 
  count() %>% 
  pivot_wider(names_from = habitat, values_from = n, values_fill = 0) %>% 
  mutate("total" = sum(littoral, metalimnion, surface)) %>% 
  select(site, collection_date, littoral, surface, metalimnion, total) %>% 
  arrange(collection_date) %>% 
  knitr::kable()
```

## Taxonomic variation in CTmax

We made `r length(which(ctmax_data$order == "Cyclopoid"))` measurements for Cyclopoids and `r length(which(ctmax_data$order == "Calanoid"))` measurements for Calanoids.

In general, cyclopoids had higher CTmax values than calanoid copepods.

```{r}
ggplot(ctmax_data, aes(x = order, y = ctmax)) + 
  geom_boxplot() + 
    labs(x = "Order", 
       y = "CTmax (°C)") + 
  theme_matt()
```

CTmax data is shown below for individuals for which a genus was recorded (or could be speculated). Note, these CTmax values do not account for differences in collection temperature, and that there are several genera for which multiple species were likely sampled (e.g. *Eurytemora* and *Acanthocyclops*).

```{r fig.width=9, fig.height=9}
ctmax_data %>% 
  filter(genus != "") %>% 
  mutate(genus = fct_reorder(genus, ctmax, .fun = mean)) %>% 
ggplot(aes(x = genus, y = ctmax, fill = genus)) + 
  geom_boxplot(outlier.colour = NA) + 
  geom_point(position = position_jitter(width = 0.1, height = 0),
             alpha = 0.5) + 
  labs(x = "Genus", 
       y = "CTmax (°C)") + 
  theme_matt() + 
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 300, hjust = 0, vjust = 0.5))
```

## Other variation in CTmax

Broken down by habitat type, there are clear differences between thermal limits in the littoral, surface waters, and metalimnion. Again, these comparisons do not account for differences in collection temperature, but highlight intra-lake spatial variation in thermal limits that may be important to account for.

```{r fig.width=8, fig.height=10}
ctmax_data %>% 
  mutate(habitat = fct_relevel(habitat, "littoral", "surface", "metalimnion"),
         site = fct_reorder(site, collection_date, .fun = min)) %>% 
ggplot(aes(x = habitat, y = ctmax)) + 
  facet_wrap(site~.) + 
  geom_boxplot() +  
  labs(x = "Habitat", 
       y = "CTmax (°C)") + 
  theme_matt_facets() + 
  theme(axis.text.x = element_text(angle = 300, hjust = 0, vjust = 0.5))
```

These differences in thermal limits may be attributed to multiple factors, including variation in species composition and acclimation to the different environments. Shown below are CTmax values from the different habitats, grouped by genus, allowing us to infer the relative contribution of these different mechanisms. The increased thermal limits in the littoral community are largely due to changes in community composition (genera/species in the littoral have higher CTmax values than those in the surface waters). For several genera (Eudiaptomus and Eurytemora, for example), the change in CTmax between the surface wates and metalimnion may be driven by acclimation - individuals from the metalimnion were collected from water around 10°C cooler than the surface waters.

```{r fig.width=9, fig.height=8.5}

hab_comp = ctmax_data %>% 
  filter(genus != "") %>% 
  mutate(habitat = fct_relevel(habitat, "littoral", "surface", "metalimnion"),
         genus = fct_reorder(genus, ctmax, .fun = mean, .desc = T))

ctmax_data %>% 
  filter(genus != "") %>% 
  group_by(genus, habitat) %>% 
  summarise(mean_ctmax = mean(ctmax)) %>% 
  ungroup() %>% 
  mutate(habitat = fct_relevel(habitat, "littoral", "surface", "metalimnion")) %>% 
ggplot(aes(x = habitat, y = mean_ctmax, colour = genus, group = genus)) +
  facet_wrap(genus~.) + 
  geom_point(data = hab_comp, aes(x = habitat, y = ctmax),
             alpha = 0.5) + 
  geom_line(linewidth = 2)+ 
  labs(x = "Habitat", 
       y = "CTmax (°C)") + 
  theme_matt_facets() + 
  theme(legend.position = "right") + 
  theme(axis.text.x = element_text(angle = 300, hjust = 0, vjust = 0.5),
        legend.position = "none")

```

```{r, include=F}
ctmax_data %>% 
  ggplot(aes(x = collection_temp, y = ctmax)) + 
  facet_wrap(genus~.) + 
  geom_point() + 
  geom_smooth(method = "lm", se = F) + 
  theme_matt_facets()
```

## Statistical modelling

We examined the data using a mixed effects model, where CTmax is modeled as a function of collection temperature, genus, and habitat type (with no interactions). Site, tube number (as a proxy for the position within the water bath), and the water bath ID were included as random effects. This model performs fairly well, although there is high variance inflation for both collection temperature and habitat type.

```{r fig.height=11, fig.width=9}

model_data = ctmax_data %>% 
  filter(genus != "")

ctmax.model = lme4::lmer(data = model_data, 
                         ctmax ~ collection_temp + genus + habitat + (1|site) + (1|tube) + (1|water_bath)) 

performance::check_model(ctmax.model)

```

An ANOVA indicates strong effects of genus, but no effect of collection temperature or habitat type. This analysis will be more powerful when genera have been disaggregated to the species level.

```{r}

car::Anova(ctmax.model) %>% knitr::kable()

```

Using this model, we can extract the marginal mean effects for each genus (i.e. what is the expected CTmax for each genus, controlling for other factors like collection temperature). Here we show the expected CTmax for each genus at a collection temperature of 20°C. Again, we will plan on using a similar analysis to examine variation in CTmax across species.

```{r}

genus_effects = emmeans::emmeans(ctmax.model, specs = "genus", at = list(collection_temp = 20)) %>% data.frame() %>% 
  mutate(genus = fct_reorder(genus, emmean, .fun = mean))


ggplot(genus_effects, aes(x = genus, y = emmean)) + 
  geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE),
                width = 0.4) + 
  geom_point(size = 3) + 
  labs(x = "Genus", 
       y = "CTmax (°C)") + 
  theme_matt() + 
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 300, hjust = 0, vjust = 0.5))

```
